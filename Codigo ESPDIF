#include <stdio.h>
#include "freertos/FreeRTOS.h"
#include "freertos/task.h"
#include "driver/gpio.h"

// Definiciones botones/leds
#define boton1 GPIO_NUM_2
#define boton2 GPIO_NUM_5
#define boton3 GPIO_NUM_21
#define led1 GPIO_NUM_13
#define led2 GPIO_NUM_14
#define led3 GPIO_NUM_26
#define led4 GPIO_NUM_25

// Definición de tiempos de anti-rebote
const unsigned long debounceDelay = 50; // Tiempo de anti-rebote en milisegundos
unsigned long lastButton1Press = 0;
unsigned long lastButton2Press = 0;
unsigned long lastButton3Press = 0;

// Definición variables
int modo = 0;
int estadomodo;
int mas;
int menos;
uint8_t contador = 0;

// Función para configurar GPIOs
void configure_gpio() {
    gpio_pad_select_gpio(led1);
    gpio_pad_select_gpio(led2);
    gpio_pad_select_gpio(led3);
    gpio_pad_select_gpio(led4);

    gpio_set_direction(led1, GPIO_MODE_OUTPUT);
    gpio_set_direction(led2, GPIO_MODE_OUTPUT);
    gpio_set_direction(led3, GPIO_MODE_OUTPUT);
    gpio_set_direction(led4, GPIO_MODE_OUTPUT);

    gpio_pad_select_gpio(boton1);
    gpio_pad_select_gpio(boton2);
    gpio_pad_select_gpio(boton3);

    gpio_set_direction(boton1, GPIO_MODE_INPUT);
    gpio_set_direction(boton2, GPIO_MODE_INPUT);
    gpio_set_direction(boton3, GPIO_MODE_INPUT);

    gpio_set_pull_mode(boton1, GPIO_PULLDOWN_ONLY);
    gpio_set_pull_mode(boton2, GPIO_PULLUP_ONLY);
    gpio_set_pull_mode(boton3, GPIO_PULLUP_ONLY);
}

void app_main() {
    configure_gpio();

    while (1) {
        unsigned long currentTime = xTaskGetTickCount() * portTICK_PERIOD_MS;
        int currentButton1State = gpio_get_level(boton1);
        int currentButton2State = gpio_get_level(boton2);
        int currentButton3State = gpio_get_level(boton3);

        // Anti-rebote para botón modo (boton1)
        if (currentButton1State == 0 && (currentTime - lastButton1Press) > debounceDelay) {
            lastButton1Press = currentTime;
            modo = !modo; // Alterna entre los modos 0 y 1
        }

        // Anti-rebote para botón suma (boton2)
        if (currentButton2State == 0 && (currentTime - lastButton2Press) > debounceDelay) {
            lastButton2Press = currentTime;
            contador++;
            if (modo == 1) {
                if (contador > 4) { // Límite de 4 en modo binario
                    contador = 0;
                }
            }
        }

        // Anti-rebote para botón resta (boton3)
        if (currentButton3State == 0 && (currentTime - lastButton3Press) > debounceDelay) {
            lastButton3Press = currentTime;
            contador--;
            if (contador < 0) {
                contador = 0; // Evita que el contador sea negativo
            }
        }

        // Estado botones
        estadomodo = gpio_get_level(boton1);
        mas = gpio_get_level(boton2);
        menos = gpio_get_level(boton3);

        // Botón modo
        if (estadomodo == 1) {
            modo = !modo;
        }

        // Botones suma / resta
        if (mas == 1) { // Sumador que indica sobre el botón
            contador++;
            if (modo == 1) {
                if (contador > 4) {
                    contador = 0;
                }
            } else {
                if (contador > 15) {
                    contador = 0;
                }
            }
        }
        if (menos == 1) { // Descripción resta
            contador--;
            if (contador < 0) {
                contador = 0; // Evita que el contador sea negativo
            }
        }

        // Modo binario
        if (modo == 0) {
            switch (contador) {
                case 0:
                    gpio_set_level(led1, 0);
                    gpio_set_level(led2, 0);
                    gpio_set_level(led3, 0);
                    gpio_set_level(led4, 0);
                    break;
                case 1:
                    gpio_set_level(led1, 1);
                    gpio_set_level(led2, 0);
                    gpio_set_level(led3, 0);
                    gpio_set_level(led4, 0);
                    break;
                case 2:
                    gpio_set_level(led1, 0);
                    gpio_set_level(led2, 1);
                    gpio_set_level(led3, 0);
                    gpio_set_level(led4, 0);
                    break;
                case 3:
                    gpio_set_level(led1, 1);
                    gpio_set_level(led2, 1);
                    gpio_set_level(led3, 0);
                    gpio_set_level(led4, 0);
                    break;
                case 4:
                    gpio_set_level(led1, 0);
                    gpio_set_level(led2, 0);
                    gpio_set_level(led3, 1);
                    gpio_set_level(led4, 0);
                    break;
                case 5:
                    gpio_set_level(led1, 1);
                    gpio_set_level(led2, 0);
                    gpio_set_level(led3, 1);
                    gpio_set_level(led4, 0);
                    break;
                case 6:
                    gpio_set_level(led1, 0);
                    gpio_set_level(led2, 1);
                    gpio_set_level(led3, 1);
                    gpio_set_level(led4, 0);
                    break;
                case 7:
                    gpio_set_level(led1, 1);
                    gpio_set_level(led2, 1);
                    gpio_set_level(led3, 1);
                    gpio_set_level(led4, 0);
                    break;
                case 8:
                    gpio_set_level(led1, 0);
                    gpio_set_level(led2, 0);
                    gpio_set_level(led3, 0);
                    gpio_set_level(led4, 1);
                    break;
                case 9:
                    gpio_set_level(led1, 1);
                    gpio_set_level(led2, 0);
                    gpio_set_level(led3, 0);
                    gpio_set_level(led4, 1);
                    break;
                case 10:
                    gpio_set_level(led1, 0);
                    gpio_set_level(led2, 1);
                    gpio_set_level(led3, 0);
                    gpio_set_level(led4, 1);
                    break;
                case 11:
                    gpio_set_level(led1, 1);
                    gpio_set_level(led2, 1);
                    gpio_set_level(led3, 0);
                    gpio_set_level(led4, 1);
                    break;
                case 12:
                    gpio_set_level(led1, 0);
                    gpio_set_level(led2, 0);
                    gpio_set_level(led3, 1);
                    gpio_set_level(led4, 1);
                    break;
                case 13:
                    gpio_set_level(led1, 1);
                    gpio_set_level(led2, 0);
                    gpio_set_level(led3, 1);
                    gpio_set_level(led4, 1);
                    break;
                case 14:
                    gpio_set_level(led1, 0);
                    gpio_set_level(led2, 1);
                    gpio_set_level(led3, 1);
                    gpio_set_level(led4, 1);
                    break;
                case 15:
                    gpio_set_level(led1, 1);
                    gpio_set_level(led2, 1);
                    gpio_set_level(led3, 1);
                    gpio_set_level(led4, 1);
                    break;
            }
        }
        // Modo decimal
        else {
            switch (contador) {
                case 0:
                    gpio_set_level(led1, 0);
                    gpio_set_level(led2, 0);
                    gpio_set_level(led3, 0);
                    gpio_set_level(led4, 0);
                    break;
                case 1:
                    gpio_set_level(led1, 1);
                    gpio_set_level(led2, 0);
                    gpio_set_level(led3, 0);
                    gpio_set_level(led4, 0);
                    break;
                case 2:
                    gpio_set_level(led1, 0);
                    gpio_set_level(led2, 1);
                    gpio_set_level(led3, 0);
                    gpio_set_level(led4, 0);
                    break;
                case 3:
                    gpio_set_level(led1, 0);
                    gpio_set_level(led2, 0);
                    gpio_set_level(led3, 1);
                    gpio_set_level(led4, 0);
                    break;
                case 4:
                    gpio_set_level(led1, 0);
                    gpio_set_level(led2, 0);
                    gpio_set_level(led3, 0);
                    gpio_set_level(led4, 1);
                    break;
            }
        }

}
